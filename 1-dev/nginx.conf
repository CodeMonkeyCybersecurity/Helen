worker_processes  auto;

events {
    worker_connections  1024;
}

###
# STREAM BLOCK for mail protocols
###
stream {
    # Upstream definitions: mail services on the local backend
    upstream mailcow_imap_ssl {
        server 100.105.31.114:993;  # IMAP-SSL on the local mailcow
    }
    upstream mailcow_smtp_tls {
        server 100.105.31.114:587;  # SMTP submission on the local mailcow
    }
    # If you want to handle port 25 or 465, you can define them similarly, e.g.:
    # upstream mailcow_smtp25 {
    #     server 100.105.31.114:25;
    # }

    # Listen IMAP over SSL externally
    server {
        listen 993 ssl;
        proxy_pass mailcow_imap_ssl;

        # SSL cert for mail.chickenj0.cloud
        ssl_certificate /etc/nginx/certs/mail.chickenj0.cloud.fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/mail.chickenj0.cloud.privkey.pem;

        # (Optional) SSL Settings
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;
    }

    # Listen SMTP submission with STARTTLS externally
    server {
        listen 587 ssl;  # Or if you prefer to do pure TLS on 465, use 465
        proxy_pass mailcow_smtp_tls;

        ssl_certificate /etc/nginx/certs/mail.chickenj0.cloud.fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/mail.chickenj0.cloud.privkey.pem;

        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;
    }

    # (Optional) If you want to forward plain 25 to Mailcow, or do SSL on 465:
    # server {
    #     listen 25;
    #     proxy_pass mailcow_smtp25;
    # }

    # Wazuh streams
    upstream wazuh_manager_1515 {
        server 100.105.31.114:1515;
    }
    server {
        listen 1515;
        proxy_pass wazuh_manager_1515;
    }

    upstream wazuh_manager_1514 {
        server 100.105.31.114:1514;
    }
    server {
        listen 1514;
        proxy_pass wazuh_manager_1514;
    }
}

###
# HTTP BLOCK for Web UI (Mailcow Admin, Wazuh Kibana, Static Site)
###
http {
    include       mime.types;
    default_type  application/octet-stream;

    #--------------------------------------------------
    # 1) MAIN WEBSITE: chickenj0.cloud
    #--------------------------------------------------
    # Redirect HTTP → HTTPS
    server {
        listen 80;
        server_name chickenj0.cloud;
        return 301 https://$host$request_uri;
    }

    # The HTTPS server for chickenj0.cloud
    server {
        listen 443 ssl;
        server_name chickenj0.cloud;

        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        location / {
            root /usr/share/nginx/html;
            index index.html;
        }
    }

    #--------------------------------------------------
    # 2) WAZUH: wazuh.chickenj0.cloud
    #--------------------------------------------------
    server {
        listen 80;
        server_name wazuh.chickenj0.cloud;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name wazuh.chickenj0.cloud;

        ssl_certificate /etc/nginx/certs/wazuh.fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/wazuh.privkey.pem;

        # Proxy pass to Kibana interface on local Wazuh
        location / {
            proxy_pass https://100.105.31.114:5601/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    #--------------------------------------------------
    # 3) MAILCOW WEB UI: mail.chickenj0.cloud
    #--------------------------------------------------
    # - We do HTTP → HTTPS
    server {
        listen 80;
        server_name mail.chickenj0.cloud;
        return 301 https://$host$request_uri;
    }

    # - We do HTTPS termination and pass traffic to the Mailcow web container
    server {
        listen 443 ssl;
        server_name mail.chickenj0.cloud;

        ssl_certificate /etc/nginx/certs/mail.chickenj0.cloud.fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/mail.chickenj0.cloud.privkey.pem;

        location / {
            proxy_pass http://100.105.31.114:8080; 
            # ^ Adjust if your Mailcow web UI is mapped differently,
            #   for example: "http://100.105.31.114:80" if you published it on 80 inside Docker.

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
